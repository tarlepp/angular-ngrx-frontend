@use './variables' as vars;

.no-padding {
  padding: 0 !important;
}

.no-margin {
  margin: 0 !important;
}

@each $size-name, $size in vars.$sizes {
  .margin#{$size-name} {
    margin: #{$size} !important;
  }

  .padding#{$size-name} {
    padding: #{$size} !important;
  }
}

@each $position in vars.$positions {
  @each $size-name, $size in vars.$sizes {
    .margin-#{$position}#{$size-name} {
      margin-#{$position}: #{$size} !important;
    }

    .margin-negative-#{$position}#{$size-name} {
      margin-#{$position}: -#{$size} !important;
    }

    .padding-#{$position}#{$size-name} {
      padding-#{$position}: #{$size} !important;
    }
  }

  .no-margin-#{$position} {
    margin-#{$position}: 0 !important;
  }

  .no-padding-#{$position} {
    padding-#{$position}: 0 !important;
  }
}

@each $orientation in vars.$orientations {
  @each $size-name, $size in vars.$sizes {
    @if $orientation == 'vertical' {
      .margin-#{$orientation}#{$size-name} {
        margin-top: #{$size} !important;
        margin-bottom: #{$size} !important;
      }

      .margin-negative-#{$orientation}#{$size-name} {
        margin-top: -#{$size} !important;
        margin-bottom: -#{$size} !important;
      }

      .padding-#{$orientation}#{$size-name} {
        padding-top: #{$size} !important;
        padding-bottom: #{$size} !important;
      }
    } @else {
      .margin-#{$orientation}#{$size-name} {
        margin-right: #{$size} !important;
        margin-left: #{$size} !important;
      }

      .margin-negative-#{$orientation}#{$size-name} {
        margin-right: -#{$size} !important;
        margin-left: -#{$size} !important;
      }

      .padding-#{$orientation}#{$size-name} {
        padding-right: #{$size} !important;
        padding-left: #{$size} !important;
      }
    }
  }

  @if $orientation == 'vertical' {
    .no-margin-#{$orientation} {
      margin-top: 0 !important;
      margin-bottom: 0 !important;
    }

    .no-padding-#{$orientation} {
      padding-top: 0 !important;
      padding-bottom: 0 !important;
    }
  } @else {
    .no-margin-#{$orientation} {
      margin-right: 0 !important;
      margin-left: 0 !important;
    }

    .no-padding-#{$orientation} {
      padding-right: 0 !important;
      padding-left: 0 !important;
    }
  }
}

@each $name, $opacity in vars.$opacities {
  .opacity-#{$name} {
    opacity: #{$opacity};
  }
}

@each $name, $degree in vars.$degrees {
  .rotate-#{$name} {
    transform: rotate(#{$degree});
  }
}

.selectable {
  &:hover {
    cursor: pointer;
  }
}

.unselectable {
  user-select: none;
  outline: none;
}

.no-scroll {
  overflow: hidden;
}

.scroll-y {
  overflow-y: scroll;
}

.scroll-y-auto {
  overflow-y: auto;
}

.no-wrap {
  white-space: nowrap;
}

.overflow-hidden {
  overflow: hidden;
}

.text-color-primary {
  color: var(--theme-primary-color) !important;
}

.text-color-primary-contrast {
  color: var(--theme-primary-color-contrast) !important;
}

.text-color-accent {
  color: var(--theme-accent-color) !important;
}

.text-color-accent-contrast {
  color: var(--theme-accent-color-contrast) !important;
}

.text-color-warn {
  color: var(--theme-warn-color) !important;
}

.text-color-warn-contrast {
  color: var(--theme-warn-color-contrast) !important;
}

.text-color-normal {
  color: var(--theme-text-color) !important;
}

.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

.text-bold {
  font-weight: 600 !important;
}

.text-italic {
  font-style: italic !important;
}

.text-underline {
  text-decoration: underline !important;
}

.text-monospace {
  font-family: vars.$font-family-monospace !important;
}

.text-lowercase {
  text-transform: lowercase !important;
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-normal {
  font-size: vars.$font-size-normal !important;
}

.text-small {
  font-size: vars.$font-size-small !important;
}

.text-size-80 {
  font-size: 80%;
}

.cursor-pointer {
  cursor: pointer;
}
