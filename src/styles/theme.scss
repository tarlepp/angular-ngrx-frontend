/**
 * Custom Theming for Angular Material
 *
 * For more information:
 *  - https://material.angular.io/guide/theming
 *  - https://materialtheme.arcsine.dev/
 */
@use '@angular/material' as mat;

// Application specified styles for theming
@use './palettes' as palettes;
@use './variables' as vars;

/**
 * Define a custom typography config that overrides the font-family as well as
 * the `headlines` and `body-1` levels.
 */
$custom-typography: mat.m2-define-typography-config(
  $font-family: vars.$font-family,
  $headline-1: mat.m2-define-typography-level(112px, 112px, 300, $letter-spacing: -.05em),
  $headline-2: mat.m2-define-typography-level(56px, 56px, 400, $letter-spacing: -.02em),
  $headline-3: mat.m2-define-typography-level(45px, 48px, 400, $letter-spacing: -.005em),
  $headline-4: mat.m2-define-typography-level(34px, 40px, 400),
  $headline-5: mat.m2-define-typography-level(24px, 32px, 400),
  $headline-6: mat.m2-define-typography-level(20px, 32px, 500),
  $subtitle-1: mat.m2-define-typography-level(16px, 28px, 400),
  $body-1: mat.m2-define-typography-level(15px, 24px, 400),
  $subtitle-2: mat.m2-define-typography-level(14px, 24px, 500),
  $body-2: mat.m2-define-typography-level(14px, 20px, 400),
  $caption: mat.m2-define-typography-level(12px, 20px, 400),
  $button: mat.m2-define-typography-level(14px, 14px, 500),
);

// Compute font config
@include mat.all-component-typographies($custom-typography);
@include mat.elevation-classes;
@include mat.app-background;

// Define the used palettes by application specified palette configuration
$light-palette-primary: mat.m2-define-palette(palettes.$app-palette-primary, vars.$light-hue-primary);
$light-palette-accent: mat.m2-define-palette(palettes.$app-palette-accent, vars.$light-hue-accent);
$light-palette-warn: mat.m2-define-palette(palettes.$app-palette-warn, vars.$light-hue-warn);
$dark-palette-primary: mat.m2-define-palette(palettes.$app-palette-primary, vars.$dark-hue-primary);
$dark-palette-accent: mat.m2-define-palette(palettes.$app-palette-accent, vars.$dark-hue-accent);
$dark-palette-warn: mat.m2-define-palette(palettes.$app-palette-warn, vars.$dark-hue-warn);

// Background palette for light themes.
$light-theme-background: (
  status-bar: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 300),
  app-bar: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 100),
  background: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 50),
  hover: rgba(black, .04), // TODO(kara): check style with Material Design UX
  card: white,
  dialog: white,
  disabled-button: rgba(black, .12),
  raised-button: white,
  focused-button: rgba(black, .12),
  selected-button: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 300),
  selected-disabled-button: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 400),
  disabled-button-toggle: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 200),
  unselected-chip: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 300),
  disabled-list-option: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 200),
  tooltip: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 700),
);

// Background palette for dark themes.
$dark-theme-background: (
  status-bar: black,
  app-bar: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 800),
  background: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 600),
  hover: rgba(white, .04), // TODO(kara): check style with Material Design UX
  card: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 500),
  dialog: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 800),
  disabled-button: rgba(white, .12),
  raised-button: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 800),
  focused-button: rgba(white, .12),
  selected-button: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 900),
  selected-disabled-button: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 800),
  disabled-button-toggle: black,
  unselected-chip: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 700),
  disabled-list-option: black,
  tooltip: mat.m2-get-color-from-palette(palettes.$app-palette-grey, 700),
);

// Foreground (for texts) palette for light themes.
$light-theme-foreground: (
  base: black,
  divider: rgba(black, .12),
  dividers: rgba(black, .12),
  disabled: rgba(black, .38),
  disabled-button: rgba(black, .26),
  disabled-text: rgba(black, .38),
  elevation: black,
  hint-text: rgba(black, .38),
  secondary-text: rgba(black, .54),
  icon: rgba(black, .54),
  icons: rgba(black, .54),
  text: rgba(black, .87),
  slider-min: rgba(black, .87),
  slider-off: rgba(black, .26),
  slider-off-active: rgba(black, .38),
);

// Foreground (for texts) palette for dark themes.
$dark-theme-foreground: (
  base: white,
  divider: rgba(white, .12),
  dividers: rgba(white, .12),
  disabled: rgba(white, .38),
  disabled-button: rgba(white, .26),
  disabled-text: rgba(white, .38),
  elevation: black,
  hint-text: rgba(white, .38),
  secondary-text: rgba(white, .54),
  icon: rgba(white, .54),
  icons: rgba(white, .54),
  text: rgba(white, .87),
  slider-min: rgba(white, .87),
  slider-off: rgba(white, .26),
  slider-off-active: rgba(white, .38),
);

// Light theme base definition
$light-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $light-palette-primary,
      accent: $light-palette-accent,
      warn: $light-palette-warn,
    ),
  )
);

// Dark theme base definition
$dark-theme: mat.m2-define-dark-theme(
  (
    color: (
      primary: $dark-palette-primary,
      accent: $dark-palette-accent,
      warn: $dark-palette-warn,
    ),
  )
);
